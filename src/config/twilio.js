const twilio = require('twilio');
require('dotenv').config();

// ‚úÖ RAILWAY LOGGING: Inicio de inicializaci√≥n Twilio
console.log('üìû TWILIO - Iniciando configuraci√≥n...');

// ‚úÖ VERIFICACI√ìN CR√çTICA: Variables de entorno obligatorias
const requiredEnvVars = [
  'TWILIO_ACCOUNT_SID',
  'TWILIO_AUTH_TOKEN',
  'TWILIO_WHATSAPP_NUMBER',
];

console.log('üîç TWILIO - Verificando variables de entorno...');
const missingVars = requiredEnvVars.filter(varName => !process.env[varName]);
if (missingVars.length > 0) {
  console.error('‚ùå TWILIO - Variables faltantes:', missingVars);
  console.error('‚ùå TWILIO - El webhook NO funcionar√° sin estas variables');
  process.exit(1);
}

// ‚úÖ VALIDACI√ìN ADICIONAL: Formato de variables
if (process.env.TWILIO_ACCOUNT_SID && !process.env.TWILIO_ACCOUNT_SID.startsWith('AC')) {
  console.error('‚ùå TWILIO - TWILIO_ACCOUNT_SID debe comenzar con "AC"');
  process.exit(1);
}

if (process.env.TWILIO_WHATSAPP_NUMBER && !process.env.TWILIO_WHATSAPP_NUMBER.includes('whatsapp:')) {
  console.error('‚ùå TWILIO - TWILIO_WHATSAPP_NUMBER debe tener formato "whatsapp:+1234567890"');
  process.exit(1);
}

console.log('‚úÖ TWILIO - Variables de entorno verificadas');

// ‚úÖ INICIALIZACI√ìN ROBUSTA CON TRY/CATCH
let client, twilioConfig;

try {
  console.log('üìû TWILIO - Inicializando cliente...');
  
  // Inicializar cliente de Twilio
  client = twilio(
    process.env.TWILIO_ACCOUNT_SID,
    process.env.TWILIO_AUTH_TOKEN,
  );

  console.log('‚úÖ TWILIO - Cliente inicializado exitosamente');

  // ‚úÖ CONFIGURACI√ìN COMPLETA
  twilioConfig = {
    accountSid: process.env.TWILIO_ACCOUNT_SID,
    authToken: process.env.TWILIO_AUTH_TOKEN,
    whatsappNumber: process.env.TWILIO_WHATSAPP_NUMBER,
    webhookSecret: process.env.WEBHOOK_SECRET || null, // Opcional
  };

  console.log('‚úÖ TWILIO - Configuraci√≥n completada');
  console.log('üìû TWILIO - N√∫mero WhatsApp:', process.env.TWILIO_WHATSAPP_NUMBER);
  console.log('üìû TWILIO - Account SID:', process.env.TWILIO_ACCOUNT_SID.substring(0, 10) + '...');

  // ‚úÖ TEST DE VALIDACI√ìN OPCIONAL (sin bloquear inicializaci√≥n)
  console.log('üîç TWILIO - Realizando test de conectividad...');
  
  // Test simple de validaci√≥n de credenciales
  client.api.accounts(process.env.TWILIO_ACCOUNT_SID).fetch()
    .then((account) => {
      console.log('‚úÖ TWILIO - Conectividad confirmada, estado:', account.status);
    })
    .catch((authError) => {
      console.log('‚ö†Ô∏è TWILIO - Test de conectividad fall√≥ (verificar credenciales):', authError.message);
      // No bloquear la inicializaci√≥n por esto
    });

} catch (initError) {
  console.error('‚ùå TWILIO - Error cr√≠tico en inicializaci√≥n:', initError.message);
  console.error('‚ùå TWILIO - Stack trace:', initError.stack);
  
  // Mostrar informaci√≥n espec√≠fica del error
  if (initError.message.includes('ACCOUNT_SID')) {
    console.error('‚ùå TWILIO - Problema con TWILIO_ACCOUNT_SID - verificar formato AC...');
  }
  if (initError.message.includes('AUTH_TOKEN')) {
    console.error('‚ùå TWILIO - Problema con TWILIO_AUTH_TOKEN - verificar token v√°lido');
  }
  
  console.error('‚ùå TWILIO - El webhook NO funcionar√° correctamente');
  console.error('‚ùå TWILIO - Deteniendo aplicaci√≥n por error cr√≠tico');
  process.exit(1);
}

console.log('üéâ TWILIO - Configuraci√≥n completada exitosamente');

module.exports = {
  client,
  twilioConfig,
};
