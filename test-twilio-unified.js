#!/usr/bin/env node

console.log('üß™ Probando exportaci√≥n unificada de TwilioService...\n');

try {
  // Probar importaci√≥n de instancia por defecto
  console.log('1. Probando importaci√≥n de instancia por defecto...');
  const twilioService = require('./src/services/TwilioService');
  console.log('‚úÖ Instancia importada correctamente');
  console.log('   Tipo:', typeof twilioService);
  console.log('   M√©todos disponibles:', Object.getOwnPropertyNames(Object.getPrototypeOf(twilioService)).filter(name => name !== 'constructor'));
  
  // Probar importaci√≥n de clase
  console.log('\n2. Probando importaci√≥n de clase...');
  const { TwilioService: TwilioServiceClass } = require('./src/services/TwilioService');
  console.log('‚úÖ Clase importada correctamente');
  console.log('   Tipo:', typeof TwilioServiceClass);
  
  // Probar creaci√≥n de nueva instancia
  console.log('\n3. Probando creaci√≥n de nueva instancia...');
  const newInstance = new TwilioServiceClass();
  console.log('‚úÖ Nueva instancia creada correctamente');
  console.log('   Tipo:', typeof newInstance);
  
  // Probar m√©todo sendWhatsAppMessage
  console.log('\n4. Probando m√©todo sendWhatsAppMessage...');
  if (typeof twilioService.sendWhatsAppMessage === 'function') {
    console.log('‚úÖ M√©todo sendWhatsAppMessage disponible');
  } else {
    console.log('‚ùå M√©todo sendWhatsAppMessage no disponible');
  }
  
  // Probar getTwilioService
  console.log('\n5. Probando getTwilioService...');
  const { getTwilioService } = require('./src/services/TwilioService');
  const singletonInstance = getTwilioService();
  console.log('‚úÖ getTwilioService funciona correctamente');
  console.log('   Instancia obtenida:', typeof singletonInstance);
  
  console.log('\nüéâ Todas las pruebas de exportaci√≥n pasaron correctamente!');
  console.log('\nüìã Resumen de exportaciones:');
  console.log('   - Instancia por defecto: ‚úÖ');
  console.log('   - Clase nombrada: ‚úÖ');
  console.log('   - getTwilioService: ‚úÖ');
  console.log('   - Compatibilidad: ‚úÖ');
  
} catch (error) {
  console.error('\n‚ùå Error en las pruebas:', error.message);
  console.error('Stack:', error.stack);
  process.exit(1);
} 